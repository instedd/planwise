#!/bin/bash
set -euo pipefail
export PGPASSWORD=$POSTGRES_PASSWORD;

source $(dirname "${BASH_SOURCE}")/env-vars

# Creates a byte-sized raster file data/regions/REGIONID.tif,
# with a mask of each region, ie a value of 255 for the region.
#
# These masks will then be used to create masks for the facility
# polygon regions, in raster-isochrone, that are used to calculate
# demand.

function target_resolution {
    raster_name=$1
    gdalinfo $raster_name | grep "Pixel Size" | sed -E 's/.*\(([^)]*).*/\1/g' | tr ',' ' '
}

DATA_PATH=${DATA_PATH:-data}

if [[ "${RASTER_ISOCHRONES}" = "false" ]]; then
  echo "   -> Rasterizing no regions! Check global variable RASTER_ISOCHRONES (is set to false)"
  exit 0
fi

echo "   -> Rasterizing regions"

PARAM_COUNTRY_NAME=$1
PARAM_ID_SOURCE=$2

cd $(dirname "${BASH_SOURCE}")${APP_FOLDER}

REGIONS=$(psql -d $POSTGRES_DB -U $POSTGRES_USER -h $POSTGRES_HOST -p $POSTGRES_PORT -t -A -c "SELECT id FROM regions WHERE country = '$PARAM_COUNTRY_NAME';")
REGIONS_LEN=$(echo $REGIONS | wc -w | tr -d '[[:space:]]')

echo "   -> Regions to process: $REGIONS_LEN"

SOURCE_ROW=$(psql -d $POSTGRES_DB -U $POSTGRES_USER -h $POSTGRES_HOST -p $POSTGRES_PORT -t -A -c "SELECT id, name, tif_file FROM population_sources WHERE id = '$PARAM_ID_SOURCE';")
RASTER_FILENAME=`echo $SOURCE_ROW | cut -d \| -f 3`
echo -n "   -> Filename to process: $(echo $RASTER_FILENAME) ... "

RASTER=$DATA_PATH/$RASTER_FILENAME
if [ ! -e $RASTER ]; then
  echo " not found. Cannot extract resolution."
  exit 1
fi
echo -n " found!"

resolution=$(target_resolution $RASTER)
echo " Using resolution: $resolution"

mkdir -p ${DATA_PATH}/regions/

for region_id in $REGIONS; do
  echo "   -> Rasterizing ${region_id}"
  TARGET=${DATA_PATH}/regions/${region_id}.tif
  if [[ ! -e $TARGET ]]; then
    gdal_rasterize -q -co "TILED=YES" -co "BLOCKXSIZE=128" -co "BLOCKYSIZE=128" \
      -ot byte -a_nodata 0 -burn 255 \
      -sql "SELECT the_geom FROM regions WHERE id = ${region_id}" \
      -co "NBITS=1" -co "COMPRESS=CCITTFAX4" \
      -tr $resolution \
      -tap \
      PG:"dbname=${POSTGRES_DB} host=${POSTGRES_HOST} port=${POSTGRES_PORT} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}" $TARGET
  fi;
done;
